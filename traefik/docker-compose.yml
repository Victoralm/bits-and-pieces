---
name: Alms-Traefik-Example
services:
    almsNginx1:
        container_name: almsNginx1
        hostname: almsNginx1
        image: nginx:latest
        ports:
            - 780:80
        volumes:
            - ./data/nginx1/html:/usr/share/nginx/html
        networks:
            - frontend
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.almsNginx1.rule=Host(`nx1.localhost`)"
            - "traefik.http.routers.almsNginx1.entrypoints=websecure"
            - "traefik.http.routers.almsNginx1.tls.certresolver=localresolver"
            - "traefik.http.services.almsNginx1.loadbalancer.server.port=80"

    almsNginx2:
        container_name: almsNginx2
        hostname: almsNginx2
        image: nginx:latest
        ports:
            - 880:80
        volumes:
            - ./data/nginx2/html:/usr/share/nginx/html
        networks:
            - frontend
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.almsNginx2.rule=Host(`nx2.localhost`)"
            - "traefik.http.routers.almsNginx2.entrypoints=websecure"
            - "traefik.http.routers.almsNginx2.tls.certresolver=localresolver"
            - "traefik.http.services.almsNginx2.loadbalancer.server.port=80"

    almsNginxTraefik:
        container_name: almsNginxTraefik
        hostname: almsNginxTraefik
        image: traefik:latest
        command:
            - --entrypoints.web.address=:80
            - --entrypoints.web.http.redirections.entryPoint.to=websecure
            - --entrypoints.websecure.address=:443
            - --providers.docker=true
            # - --providers.docker.exposedbydefault=false
            - --api.insecure=true
            - --certificatesresolvers.localresolver.acme.tlschallenge=true
            - --certificatesresolvers.localresolver.acme.email=your_email_address
            - --certificatesresolvers.localresolver.acme.storage=/letsencrypt/acme.json
        restart: unless-stopped
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - frontend
        ports:
            - "180:80"
            - "1180:8080"

networks:
    frontend:
        external: true
